name: Build & Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set SHORT_TAG
        id: vars
        run: echo "SHORT_TAG=sha-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push app-a
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/dateapp-app-a:${{ env.SHORT_TAG }} ./apps/app-a
          docker push ghcr.io/${{ github.repository_owner }}/dateapp-app-a:${{ env.SHORT_TAG }}

      - name: Build & Push app-b
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/dateapp-app-b:${{ env.SHORT_TAG }} ./apps/app-b
          docker push ghcr.io/${{ github.repository_owner }}/dateapp-app-b:${{ env.SHORT_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -Eeuo pipefail

            # --- ÁLLÍTSD BE ITT A TELEPÍTÉSI ÚTVONALAT ---
            DEPLOY_PATH="/opt/dateapp-multi"  # ha máshol van, itt írd át

            # APP_TAG a build jobtól (GitHub env). Ha üres, adjunk defaultot.
            APP_TAG="${APP_TAG:-${{ env.SHORT_TAG }}}"
            if [ -z "${APP_TAG:-}" ]; then
              APP_TAG="sha-$(date +%s)"
            fi

            echo "[DEBUG] DEPLOY_PATH=$DEPLOY_PATH  APP_TAG=$APP_TAG"

            LOG_DIR="/var/log/dateapp"
            sudo mkdir -p "$LOG_DIR"
            LOG_FILE="$LOG_DIR/deploy-$(date +%F_%H-%M-%S).log"
            exec > >(tee -a "$LOG_FILE") 2>&1

            cleanup() {
              echo "[CLEANUP] Maintenance & Freeze OFF"
              set +e
              sudo rm -f /etc/nginx/maintenance.on
              sudo nginx -t && sudo systemctl reload nginx || true

              DCY="$DEPLOY_PATH/docker-compose.prod.yml"
              if [ -f "$DCY" ] && [ -f "$DEPLOY_PATH/.env" ]; then
                REDIS_PASS=$(grep -E '^REDIS_PASS=' "$DEPLOY_PATH/.env" | sed 's/^REDIS_PASS=//')
                if [ -n "$REDIS_PASS" ]; then
                  docker compose -f "$DCY" exec -T redis \
                    sh -lc 'redis-cli -a "$REDIS_PASS" DEL app:freeze' || true
                fi
              fi
            }
            trap cleanup EXIT

            echo "=== Deploy started at $(date -Is) ==="

            DCY="$DEPLOY_PATH/docker-compose.prod.yml"

            # 0) REDIS_PASS kiolvasása a szerver .env-ből
            REDIS_PASS=""
            if [ -f "$DEPLOY_PATH/.env" ]; then
              REDIS_PASS=$(grep -E '^REDIS_PASS=' "$DEPLOY_PATH/.env" | sed 's/^REDIS_PASS=//')
            fi

            # 1) APP_TAG frissítése a szerver .env-ben
            if grep -q '^APP_TAG=' "$DEPLOY_PATH/.env" 2>/dev/null; then
              sudo sed -i 's/^APP_TAG=.*/APP_TAG='"$APP_TAG"'/' "$DEPLOY_PATH/.env"
            else
              echo "APP_TAG=$APP_TAG" | sudo tee -a "$DEPLOY_PATH/.env" >/dev/null
            fi

            # 2) Maintenance + Freeze ON
            echo on | sudo tee /etc/nginx/maintenance.on >/dev/null
            sudo nginx -t && sudo systemctl reload nginx

            if [ -n "$REDIS_PASS" ]; then
              docker compose -f "$DCY" exec -T redis \
                sh -lc 'redis-cli -a "$REDIS_PASS" SET app:freeze 1'
            else
              echo "[WARN] REDIS_PASS üres; freeze flag most kimarad"
            fi

            # 3) Pull + csere
            docker compose -f "$DCY" pull
            docker compose -f "$DCY" up -d --no-build --remove-orphans

            # 4) Smoke tesztek
            curl -fsS http://127.0.0.1/a >/dev/null
            curl -fsS http://127.0.0.1/b >/dev/null

            echo "[DONE] Deploy OK — cleanup via trap"
            echo "=== Deploy finished at $(date -Is) ==="
