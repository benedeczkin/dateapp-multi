server {
  listen 80;
  server_name _;

  # App A: /a -> php_a (FPM)
  location ^~ /a {
    # nincs szükség Nginx-nek saját kódra
    internal;
  }

  location = /a { # pontos /a kérés
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;  # <-- PHP konténerben létező path
    fastcgi_param DOCUMENT_ROOT  /var/www/html;
    fastcgi_param SCRIPT_NAME    /index.php;
    fastcgi_pass php_a:9000;
  }

  location ^~ /a/ { # /a/... átírás index.php-ra
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;
    fastcgi_param DOCUMENT_ROOT  /var/www/html;
    fastcgi_param SCRIPT_NAME    /index.php;
    fastcgi_param PATH_INFO      $uri;           # ha később szükség lesz rá
    fastcgi_param QUERY_STRING   $query_string;
    fastcgi_pass php_a:9000;
  }

  # App B: /b -> php_b (FPM)
  location = /b {
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;
    fastcgi_param DOCUMENT_ROOT  /var/www/html;
    fastcgi_param SCRIPT_NAME    /index.php;
    fastcgi_pass php_b:9000;
  }

  location ^~ /b/ {
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;
    fastcgi_param DOCUMENT_ROOT  /var/www/html;
    fastcgi_param SCRIPT_NAME    /index.php;
    fastcgi_param PATH_INFO      $uri;
    fastcgi_param QUERY_STRING   $query_string;
    fastcgi_pass php_b:9000;
  }

  # Kényelmi átirányítás: / -> /a
  location = / { return 302 /a; }

  # Biztonsági headerek
  client_max_body_size 10m;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}

# Belső-only healthcheck
server {
  listen 127.0.0.1:8081;
  server_name _;
  location = /health { return 200 "ok\n"; add_header Content-Type text/plain; }
}
